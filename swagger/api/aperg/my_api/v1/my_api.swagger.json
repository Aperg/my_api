{
  "swagger": "2.0",
  "info": {
    "title": "api/aperg/my_api/v1/my_api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ApiService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/update/id_user": {
      "post": {
        "summary": "UpdateEquipmentIDUser - Update equipment id of equipment request (as a example of task4.5 \"Реализовать поддержку вариаций типов событий на обновление сущности\")",
        "operationId": "ApiService_UpdateUserById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserByIdRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/v1/user/create": {
      "post": {
        "summary": "CreateUser - Create a new equipment request",
        "operationId": "ApiService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateUserRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/v1/user/get": {
      "post": {
        "operationId": "ApiService_GetUserById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUserByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetUserByIdRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/v1/user/list": {
      "post": {
        "summary": "ListUser - Get list of all equipment requests",
        "operationId": "ApiService_ListUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListUserRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/api/v1/user/remove": {
      "post": {
        "summary": "RemoveUser - Remove one equipment request",
        "operationId": "ApiService_RemoveUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RemoveUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RemoveUserRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CreateUserRequest": {
      "type": "object",
      "properties": {
        "idUser": {
          "type": "string",
          "format": "uint64"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "doneAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1CreateUserResponse": {
      "type": "object",
      "properties": {
        "idUser": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1GetUserByIdRequest": {
      "type": "object",
      "properties": {
        "idsUser": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        }
      }
    },
    "v1GetUserByIdResponse": {
      "type": "object",
      "properties": {
        "User": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1User"
          }
        }
      }
    },
    "v1ListUserRequest": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "string",
          "format": "uint64"
        },
        "offset": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1ListUserResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1User"
          }
        }
      }
    },
    "v1RemoveUserRequest": {
      "type": "object",
      "properties": {
        "idsUser": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        }
      }
    },
    "v1RemoveUserResponse": {
      "type": "object",
      "properties": {
        "removed": {
          "type": "boolean"
        }
      }
    },
    "v1UpdateUserByIdRequest": {
      "type": "object",
      "properties": {
        "idUser": {
          "type": "string",
          "format": "uint64"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "v1UpdateUserByIdResponse": {
      "type": "object",
      "properties": {
        "updated": {
          "type": "boolean"
        }
      }
    },
    "v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "doneAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}
