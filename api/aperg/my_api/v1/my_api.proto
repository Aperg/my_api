syntax = "proto3";

package aperg.my_api.v1;

import "validate/validate.proto";
import "google/api/annotations.proto";
import  "google/protobuf/timestamp.proto";

option go_package = ".;my_api";

// BssEquipmentRequestApiService - Service for working with equipment requests
service ApiService {
  // CreateUser - Create a new equipment request
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/api/v1/user/create",
      body: "*"
    };
  }

  rpc GetUserById(GetUserByIdRequest) returns (GetUserByIdResponse) {
    option (google.api.http) = {
      post: "/api/v1/user/get",
      body: "*"
    };
  }

  // ListUser - Get list of all equipment requests
  rpc ListUser(ListUserRequest) returns (ListUserResponse) {
    option (google.api.http) = {
      post: "/api/v1/user/list",
      body: "*"
    };
  }

  // RemoveUser - Remove one equipment request
  rpc RemoveUser(RemoveUserRequest) returns (RemoveUserResponse) {
    option (google.api.http) = {
      post: "/api/v1/user/remove",
      body: "*"
    };
  }

  // UpdateEquipmentIDUser - Update equipment id of equipment request (as a example of task4.5 "Реализовать поддержку вариаций типов событий на обновление сущности")
  rpc UpdateUserById(UpdateUserByIdRequest) returns (UpdateUserByIdResponse) {
    option (google.api.http) = {
      post: "/api/v1/update/id_user",
      body: "*"
    };
  }

}

message User {
  uint64 id = 1;
  string name = 2;
  string email = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
  google.protobuf.Timestamp deleted_at = 6;
  google.protobuf.Timestamp done_at = 7;
}

// message DescribeUserRequest {
//   uint64 id_user = 1 [(validate.rules).uint64.gt = 0];
// }

// message DescribeUserResponse {
//   UserRequest user_request = 1;
// }


message CreateUserRequest {
  uint64 id_user = 1 [(validate.rules).uint64.gt = 0];
  string name = 2;
  string email = 3;
  google.protobuf.Timestamp created_at = 4 [(validate.rules).timestamp.required = true];
  google.protobuf.Timestamp updated_at = 5;
  google.protobuf.Timestamp deleted_at = 6;
  google.protobuf.Timestamp done_at = 7;
}

message CreateUserResponse {
  uint64 id_user = 1;
}

message GetUserByIdRequest {
  repeated uint64 idsUser = 1 [(validate.rules).repeated.items.uint64.gt = 0];
}

message GetUserByIdResponse {
  repeated User User = 1;
}


message ListUserRequest {
  uint64 limit = 1 [(validate.rules).uint64.gt = 0];
  uint64 offset = 2 [(validate.rules).uint64 = {in: [5, 20, 50, 100, 200]}];
}

message ListUserResponse {
  repeated User items = 1;
}

message RemoveUserRequest {
  repeated uint64 idsUser = 1 [(validate.rules).repeated.items.uint64.gt = 0];
}

message RemoveUserResponse {
  bool removed = 1;
}

message UpdateUserByIdRequest {
  uint64 id_user  = 1 [(validate.rules).uint64.gt = 0];
  string name = 2;
  string email = 3;
}

message UpdateUserByIdResponse {
  bool updated = 1;
}

message UserRequestPayload {
  uint64 id = 1;
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp updated_at = 3;
  google.protobuf.Timestamp deleted_at = 4;
  google.protobuf.Timestamp done_at = 5;
}

message UserRequestEvent {
  uint64 id = 1;
  uint64 user_request_id = 2;
  string type = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
  UserRequestPayload payload = 6;
}
